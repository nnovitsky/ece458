[{"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/model/ModelDetailView.js":"1","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/model/ModelTablePage.js":"2","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/generic/DataTable.js":"3","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/App.js":"4","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/api/authServices.js":"5","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/instrument/InstrumentDetailView.js":"6","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/login/LoginPage.js":"7","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/index.js":"8","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/reportWebVitals.js":"9","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/user/UserProfilePage.js":"10","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/AdminRoute.js":"11","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/ProtectedRoute.js":"12","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/Navigation.js":"13","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/admin/AdminPage.js":"14","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/import/ImportPage.js":"15"},{"size":12750,"mtime":1613684316148,"results":"16","hashOfConfig":"17"},{"size":12189,"mtime":1613770495843,"results":"18","hashOfConfig":"17"},{"size":1101,"mtime":1613755410038,"results":"19","hashOfConfig":"17"},{"size":3921,"mtime":1613420516466,"results":"20","hashOfConfig":"17"},{"size":1372,"mtime":1613421730417,"results":"21","hashOfConfig":"17"},{"size":16830,"mtime":1613683057564,"results":"22","hashOfConfig":"17"},{"size":1786,"mtime":1613420516491,"results":"23","hashOfConfig":"17"},{"size":547,"mtime":1613689211328,"results":"24","hashOfConfig":"17"},{"size":362,"mtime":1611960715144,"results":"25","hashOfConfig":"17"},{"size":5278,"mtime":1613683057572,"results":"26","hashOfConfig":"17"},{"size":480,"mtime":1613420516475,"results":"27","hashOfConfig":"17"},{"size":622,"mtime":1613420516476,"results":"28","hashOfConfig":"17"},{"size":1139,"mtime":1613420516475,"results":"29","hashOfConfig":"17"},{"size":6208,"mtime":1613683057560,"results":"30","hashOfConfig":"17"},{"size":7744,"mtime":1613444280157,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},"uypf3d",{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"35"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"52"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"57"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/model/ModelDetailView.js",["71","72","73"],"import React, { Component } from 'react';\nimport EditModelPopup from './AddModelPopup';\nimport DeletePopup from '../generic/GenericPopup';\nimport Table from 'react-bootstrap/Table';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Button from 'react-bootstrap/Button';\nimport { Redirect } from \"react-router-dom\";\nimport { withRouter } from 'react-router';\nimport '../generic/General.css';\nimport logo from '../../assets/HPT_logo_crop.png';\nimport PropTypes from 'prop-types';\n\nimport ModelServices from \"../../api/modelServices\";\nimport InstrumentServices from '../../api/instrumentServices';\nimport { rawErrorsToDisplayed } from '../generic/Util';\nimport ErrorFile from '../../api/ErrorMapping/ModelErrors.json';\nimport GenericPagination from '../generic/GenericPagination';\n\nconst modelServices = new ModelServices();\nconst instrumentServices = new InstrumentServices();\nlet instrumentData = [];\nlet history;\n\n\nclass ModelDetailView extends React.Component {\n    constructor(props) {\n        super(props);\n        const arr = props.location.pathname.split('/')\n\n        this.state = {\n            redirect: null,\n            model_info: {\n                pk: arr[arr.length - 1],\n                vendor: '',\n                model_number: '',\n                description: '',\n                comment: '',\n                calibration_frequency: '',\n            },\n            instruments: [],\n            editPopup: {\n                isShown: false,\n                errors: []\n            },\n            deletePopup: {\n                isShown: false,\n                errors: []\n            },\n            pagination: {\n                resultCount: '',\n                numPages: '',\n                resultsPerPage: 10,\n                currentPageNum: '',\n                desiredPage: 1\n            },\n\n        }\n\n        this.onMoreClicked = this.onMoreClicked.bind(this);\n        this.onEditClicked = this.onEditClicked.bind(this);\n        this.onEditSubmit = this.onEditSubmit.bind(this);\n        this.onEditClose = this.onEditClose.bind(this);\n        this.onDeleteClicked = this.onDeleteClicked.bind(this);\n        this.onDeleteSubmit = this.onDeleteSubmit.bind(this);\n        this.onDeleteClose = this.onDeleteClose.bind(this);\n        this.onPaginationClick = this.onPaginationClick.bind(this);\n        this.onToggleShowAll = this.onToggleShowAll.bind(this);\n    }\n\n    async componentDidMount() {\n        await this.updateModelInfo();\n        await this.getInstruments();\n    }\n\n    render(\n        adminButtons = <div>\n            <Button onClick={this.onEditClicked}>Edit Model</Button>\n            <Button onClick={this.onDeleteClicked}>Delete Model</Button>\n        </div>\n    ) {\n        let deletePopup = (this.state.deletePopup.isShown) ? this.makeDeletePopup() : null;\n        let editPopup = (this.state.editPopup.isShown) ? this.makeEditPopup() : null;\n\n        if (this.state.redirect != null) {\n            return <Redirect to={this.state.redirect} />\n        }\n        return (\n            <div>\n                {deletePopup}\n                {editPopup}\n            <div className=\"background\">\n                <div className=\"row mainContent\">\n                        <div className=\"col-2 text-center button-col\">\n                            <img src={logo} alt=\"Logo\" />\n                            {this.props.is_admin ? adminButtons : null}\n                        </div>\n                        <div className=\"col-10\">\n                            <h2>{`Model: ${this.state.model_info.model_number}`}</h2>\n                            <Row>\n                                <Col>{this.makeDetailsTable()}</Col>\n                                <Col xs={6}>\n                                    {this.makeInstrumentsTable()}\n                                    <GenericPagination\n                                        currentPageNum={this.state.pagination.currentPageNum}\n                                        numPages={this.state.pagination.numPages}\n                                        numResults={this.state.pagination.resultCount}\n                                        resultsPerPage={this.state.pagination.resultsPerPage}\n                                        onPageClicked={this.onPaginationClick}\n                                        onShowAllToggle={this.onToggleShowAll}\n                                        isShown={!this.state.pagination.showAll}\n                                        buttonText={(this.state.pagination.showAll) ? \"Limit Results\" : \"Show All\"}\n                                    />\n                                </Col>\n                            </Row>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n\n    makeDeletePopup() {\n        let body = (\n            <p>Are you sure you want to delete Model: {this.state.model_info.model_number}?</p>\n        )\n        return (\n            <DeletePopup\n                show={this.state.deletePopup.isShown}\n                body={body}\n                headerText=\"Warning!\"\n                closeButtonText=\"Cancel\"\n                submitButtonText=\"Delete\"\n                onClose={this.onDeleteClose}\n                onSubmit={this.onDeleteSubmit}\n                submitButtonVariant=\"danger\"\n                errors={this.state.deletePopup.errors}\n            />\n        )\n    }\n\n    makeEditPopup() {\n        return (\n            <EditModelPopup\n                isShown={this.state.editPopup.isShown}\n                onSubmit={this.onEditSubmit}\n                onClose={this.onEditClose}\n                currentModel={this.state.model_info}\n                errors={this.state.editPopup.errors}\n            />\n        )\n    }\n\n    makeDetailsTable() {\n        let modelInfo = this.state.model_info;\n        return (\n            <Table bordered hover>\n                <tbody>\n                    <tr>\n                        <td><strong>Vendor</strong></td>\n                        <td>{modelInfo.vendor}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Model</strong></td>\n                        <td>{modelInfo.model_number}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Description</strong></td>\n                        <td>{modelInfo.description}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Comment</strong></td>\n                        <td>{modelInfo.comment}</td>\n                    </tr>\n                    <tr>\n                        <td><strong>Calibration Frequency</strong></td>\n                        <td>{modelInfo.calibration_frequency}</td>\n                    </tr>\n                </tbody>\n            </Table>\n        )\n    }\n\n    makeInstrumentsTable() {\n        let rows = [];\n        let count = 1;\n        this.state.instruments.forEach((element) => {\n            let currentRow = [];\n            currentRow.push(\n                <td>{count}</td>\n            )\n            currentRow.push(\n                <td>{element[\"serial_number\"]}</td>\n            )\n            currentRow.push(\n                <td><Button onClick={this.onMoreClicked} value={element[\"pk\"]}>More</Button></td>\n            )\n            count++;\n            rows.push(\n                <tr>{currentRow}</tr>\n            )\n        });\n\n        return (\n            <div className=\"data-table\">\n                <Table bordered hover size=\"sm\">\n                <thead>\n                    <tr>\n                        <th colSpan=\"3\" className=\"text-center\">Instances by Serial Number</th>\n                    </tr>\n                    <tr>\n                        <th>#</th>\n                        <th>Serial Number</th>\n                        <th>More</th>\n                    </tr>\n\n                </thead>\n                <tbody>\n                    {rows}\n                </tbody>\n            </Table>\n            </div>\n        )\n\n    }\n\n\n\n    onMoreClicked(e) {\n        this.setState({\n            redirect: `/instruments/${e.target.value}`\n        })\n    }\n\n    onEditClicked() {\n        this.setState({\n            editPopup: {\n                ...this.state.editPopup,\n                isShown: true\n            }\n        })\n    }\n\n    async onEditSubmit(editedModel) {\n        await modelServices.editModel(editedModel.pk, editedModel.vendor, editedModel.model_number, editedModel.description, editedModel.comment, editedModel.calibration_frequency).then(result => {\n            if (result.success) {\n                this.setState({\n                    deletePopup: {\n                        ...this.state.deletePopup,\n                        isShown: false\n                    }\n                })\n\n                this.updateModelInfo();\n                this.onEditClose();\n            } else {\n                let formattedErrors = rawErrorsToDisplayed(result.errors, ErrorFile[\"add__edit_model\"]);\n                this.setState({\n                    editPopup: {\n                        ...this.state.editPopup,\n                        errors: formattedErrors\n                    }\n                })\n            }\n        })\n\n    }\n\n    onEditClose() {\n        this.setState({\n            editPopup: {\n                ...this.state.editPopup,\n                isShown: false,\n                errors: []\n            }\n        })\n    }\n\n    onDeleteClicked() {\n        this.setState({\n            deletePopup: {\n                ...this.state.deletePopup,\n                isShown: true,\n            }\n        })\n    }\n\n    onDeleteClose() {\n        this.setState({\n            deletePopup: {\n                ...this.state.deletePopup,\n                errors: [],\n                isShown: false,\n            }\n        })\n    }\n\n    async onDeleteSubmit() {\n        await modelServices.deleteModel(this.state.model_info.pk).then(result => {\n            if (result.success) {\n                this.onDeleteClose();\n                this.setState({\n                    redirect: '/models/',\n                    deletePopup: {\n                        ...this.state.deletePopup,\n                        isShown: false\n                    }\n                })\n            } else {\n                let formattedErrors = rawErrorsToDisplayed(result.errors, ErrorFile[\"delete_model\"]);\n                this.setState({\n                    deletePopup: {\n                        ...this.state.deletePopup,\n                        errors: formattedErrors\n                    }\n                })\n            }\n        })\n    }\n\n    async onPaginationClick(num) {\n        this.setState({\n            pagination: {\n                ...this.state.pagination,\n                desiredPage: num\n            }\n        }, () => {\n            this.getInstruments();\n        })\n    }\n\n    async onToggleShowAll() {\n        this.setState((prevState) => {\n            return {\n                pagination: {\n                    ...this.state.pagination,\n                    showAll: !prevState.pagination.showAll\n                }\n            }\n        }, () => {\n            this.getInstruments();\n        })\n    }\n\n    async updateModelInfo() {\n        await modelServices.getModel(this.state.model_info.pk).then((result) => {\n            if (result.success) {\n                this.setState({\n                    model_info: result.data,\n                })\n\n\n            } else {\n                console.log(\"error\")\n            }\n        })\n    }\n\n    async getInstruments() {\n        instrumentServices.getInstrumentsByModelPk(this.state.model_info.pk, this.state.pagination.desiredPage, this.state.pagination.showAll)\n            .then(result => {\n                if (result.success) {\n                    this.setState({\n                        instruments: result.data.data,\n                        pagination: {\n                            ...this.state.pagination,\n                            resultCount: result.data.count,\n                        }\n                    })\n                    if (!this.state.pagination.showAll) {\n                        this.setState({\n                            pagination: {\n                                ...this.state.pagination,\n                                resultCount: result.data.count,\n                                numPages: result.data.numpages,\n                                currentPageNum: result.data.currentpage\n                            }\n                        })\n                    }\n                } else {\n                    console.log(\"failed to get instrument instances\");\n                }\n            })\n    }\n\n}\nexport default withRouter(ModelDetailView);\n\nModelDetailView.propTypes = {\n    is_admin: PropTypes.bool.isRequired\n}",["74","75"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/model/ModelTablePage.js",["76"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/generic/DataTable.js",["77"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/App.js",["78"],"import './App.css';\n\nimport React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom';\n\nimport LoginPage from './components/login/LoginPage';\nimport AdminPage from './components/admin/AdminPage';\nimport UserProfilePage from './components/user/UserProfilePage';\nimport ImportPage from './components/import/ImportPage';\nimport ModelTablePage from './components/model/ModelTablePage';\nimport ModelDetailPage from './components/model/ModelDetailView';\nimport InstrumentTablePage from './components/instrument/InstrumentTablePage';\nimport InstrumentDetailView from './components/instrument/InstrumentDetailView';\nimport Navigation from './components/Navigation';\nimport ProtectedRoute from './components/ProtectedRoute';\nimport AdminRoute from './components/AdminRoute';\n\nimport AuthServices from './api/authServices';\nconst authServices = new AuthServices();\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      logged_in: localStorage.getItem('token') ? true : false,\n      username: '',\n      error_message: '',\n      admin: false,\n      redirect: null\n    };\n  }\n\n  componentDidMount() {\n    if (this.state.logged_in) {\n      authServices.getCurrentUser().then((result) => {\n        if (result.success) {\n          this.setState({ \n            username: result.data.username,\n            admin: result.data.is_staff,\n          })\n        } else {\n          localStorage.removeItem('token');\n          this.setState({\n            logged_in: false,\n            username: '',\n            admin: false\n          });\n        }\n    }\n    )\n    }\n    else {\n      console.log(\"Not Logged in\")\n    }\n  }\n\n  handle_login = (e, data) => {\n    if (data.username === \"\" || data.password === \"\") {\n      this.setState({ error_message: 'Please complete all fields' });\n    }\n    else {\n      e.preventDefault();\n      authServices.login(data)\n        .then(res => res.json())\n        .then(json => {\n          if (typeof json.user === 'undefined') {\n            this.setState({ error_message: 'Incorrect Login Credentials' });\n          }\n          else {\n            localStorage.setItem('token', json.token);\n            this.setState({\n              logged_in: true,\n              username: json.user.username,\n              admin: json.user.is_staff,\n              redirect: true\n            });\n            this.setState({ error_message: '' });\n          }\n        });\n    }\n  };\n\n\n  handle_logout = () => {\n    localStorage.removeItem('token');\n    this.setState({ \n      logged_in: false, \n      username: '',\n      admin: false,\n      redirect: false\n   });\n  };\n\n\n\n  render(\n    form = <LoginPage handle_login={this.handle_login} error_message={this.state.error_message} isLoggedIn={this.state.logged_in}/>,\n  ) {\n    return (\n      <BrowserRouter>\n        <div>\n          <Navigation logged_in={this.state.logged_in} handle_logout={this.handle_logout} is_admin={this.state.admin}/>\n          <Switch>\n            <ProtectedRoute path=\"/models\" component={ModelTablePage} is_admin={this.state.admin} exact />\n            <ProtectedRoute path=\"/models/:pk\" component={ModelDetailPage} is_admin={this.state.admin} exact />\n            <ProtectedRoute path=\"/instruments\" component={InstrumentTablePage} is_admin={this.state.admin} exact />\n            <ProtectedRoute path=\"/instruments/:pk\" component={InstrumentDetailView} is_admin={this.state.admin} exact />\n            <ProtectedRoute path=\"/import\" component={ImportPage} exact />\n            <ProtectedRoute path=\"/user-profile\" component={UserProfilePage} exact />\n            <AdminRoute is_admin={this.state.admin} path=\"/admin\" component={AdminPage} exact />\n          </Switch>\n          {this.state.logged_in ? null : form}\n          {this.state.redirect ? (<Redirect to=\"/user-profile\"/>) : null}\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/api/authServices.js",["79"],"import Configs from './config.js';\nconst API_URL = Configs\n\n\nexport default class AuthServices {\n  constructor() { }\n\n  async login(data) {\n\n    const url = `${API_URL}/api/token_auth/`;\n\n    return fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(data)\n    });\n  }\n\n  // handles modified/expired token\n  async getCurrentUser() {\n    const token = localStorage.getItem('token');\n\n    let result = {\n      success: true,\n      data: [],\n    }\n\n    const url = `${API_URL}/api/current_user/`;\n\n    return fetch(url, {\n      headers: {\n        Authorization: `JWT ${token}`\n      }\n    })\n      .then(res => {\n        if (res.ok) {\n          return res.json().then(json => {\n            result.data = json;\n            return result;\n          });\n        } else {\n          return res.json().then(json => {\n          if (json.detail === 'Signature has expired.') {\n            window.location.reload();\n            result.success = false;\n            return result;\n          }\n            if (json.detail === 'Error decoding signature.') {\n              window.location.reload();\n            result.success = false;\n              return result;\n            }\n          result.success = false;\n            result.errors = json;\n            return result;\n          })\n      }\n      })\n    }\n}",["80","81"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/instrument/InstrumentDetailView.js",[],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/login/LoginPage.js",["82","83"],"import React from 'react';\nimport PropTypes from 'prop-types';\nimport \"./Login.css\";\nimport AuthServices from '../../api/authServices';\nimport { Redirect } from \"react-router-dom\";\nconst authServices = new AuthServices();\n\nclass login extends React.Component {\n    state = {\n        username: '',\n        password: '',\n        redirect: null\n    };\n\n    async componentDidMount() {\n        this.setState({\n            redirect: null\n        })\n    }\n\n    handle_change = e => {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState(prevstate => {\n            const newState = { ...prevstate };\n            newState[name] = value;\n            return newState;\n        });\n    };\n\n    render() {\n        return (\n            <div style={{textAlign: \"center\"}}>\n            <form className=\"login\" onSubmit={e => this.props.handle_login(e, this.state)}>\n                <h2>Log In</h2>\n                <label htmlFor=\"username\">Username</label>\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handle_change}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <input\n                    type=\"password\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.handle_change}\n                />\n                <input type=\"submit\" />\n                <h5>{this.props.error_message}</h5>\n            </form>\n            </div>\n        );\n    }\n}\n\nexport default login;\n\nlogin.propTypes = {\n    handle_login: PropTypes.func.isRequired,\n    error_message: PropTypes.string.isRequired,\n    isLoggedIn: PropTypes.bool\n  };\n",["84","85"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/index.js",[],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/reportWebVitals.js",[],["86","87"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/user/UserProfilePage.js",[],["88","89"],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/AdminRoute.js",[],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/ProtectedRoute.js",[],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/Navigation.js",[],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/admin/AdminPage.js",[],"/Users/carriehunner/Desktop/dev/ECE458/ece458/frontend/src/components/import/ImportPage.js",[],{"ruleId":"90","severity":1,"message":"91","line":1,"column":17,"nodeType":"92","messageId":"93","endLine":1,"endColumn":26},{"ruleId":"90","severity":1,"message":"94","line":22,"column":5,"nodeType":"92","messageId":"93","endLine":22,"endColumn":19},{"ruleId":"90","severity":1,"message":"95","line":23,"column":5,"nodeType":"92","messageId":"93","endLine":23,"endColumn":12},{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"90","severity":1,"message":"100","line":5,"column":8,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},{"ruleId":"90","severity":1,"message":"101","line":20,"column":9,"nodeType":"92","messageId":"93","endLine":20,"endColumn":16},{"ruleId":"90","severity":1,"message":"102","line":4,"column":25,"nodeType":"92","messageId":"93","endLine":4,"endColumn":30},{"ruleId":"103","severity":1,"message":"104","line":6,"column":3,"nodeType":"105","messageId":"106","endLine":6,"endColumn":20},{"ruleId":"96","replacedBy":"107"},{"ruleId":"98","replacedBy":"108"},{"ruleId":"90","severity":1,"message":"109","line":5,"column":10,"nodeType":"92","messageId":"93","endLine":5,"endColumn":18},{"ruleId":"90","severity":1,"message":"110","line":6,"column":7,"nodeType":"92","messageId":"93","endLine":6,"endColumn":19},{"ruleId":"96","replacedBy":"111"},{"ruleId":"98","replacedBy":"112"},{"ruleId":"96","replacedBy":"113"},{"ruleId":"98","replacedBy":"114"},{"ruleId":"96","replacedBy":"115"},{"ruleId":"98","replacedBy":"116"},"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'instrumentData' is assigned a value but never used.","'history' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'ModelTable' is defined but never used.","'columns' is assigned a value but never used.","'Route' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor",["117"],["118"],"'Redirect' is defined but never used.","'authServices' is assigned a value but never used.",["117"],["118"],["117"],["118"],["117"],["118"],"no-global-assign","no-unsafe-negation"]